package sl

import (
"fmt"
"github.com/Dekamik/farstu/internal/components/shared"
"strconv"
)

templ DeviationsView(model DeviationsViewModel) {
@shared.Page(model.Page) {
<div class="mx-3 my-3" style="padding-top:70px">
	<div class="row">
		<div class="col">
			<div class="accordion" id="deviations">
				for i, deviation := range model.Deviations {
				{{ id := "deviation" + strconv.Itoa(i) }}
				<div class="accordion-item">
					<h2 class="accordion-header">
						<button class={ "accordion-button collapsed " + deviation.Render.Color } type="button"
							data-bs-toggle="collapse" data-bs-target={ "#" + id } aria-expanded="true" aria-controls={
							id }>
							for _, mode := range deviation.Render.Modes {
								<span>
									<img class={"icon outline bg-" + mode.Color} src={ "/static/images/directions/" + mode.Mode + "-W.png" } alt={ mode.Mode } />
								</span>
							&nbsp;
							}
							{ deviation.MessageVariants["sv"].Header }
						</button>
					</h2>
					<div id={ id } class="accordion-collapse collapse" data-bs-parent="#deviations">
						<div class="accordion-body">
							<p>
								{ deviation.MessageVariants["sv"].ScopeAlias }
							</p>
							<p>
								{ deviation.MessageVariants["sv"].Details }
							</p>
							<p>
								{ fmt.Sprintf("%d/%d/%d", deviation.Priority.ImportanceLevel,
								deviation.Priority.InfluenceLevel,
								deviation.Priority.UrgencyLevel) }
							</p>
						</div>
					</div>
				</div>
				}
			</div>
		</div>
	</div>
</div>
}
}
