package yr

import (
	"farstu/internal/shared"
	"strconv"
)

templ YRNowView(model YRForecastItemModel) {
	<div hx-get="/htmx/yrnow" hx-trigger="every 6m" hx-swap="outerHTML">
		<div class="row">
			<div class="col text-right">
				<p class="weather-symbol text-center">
					<img
						src={ "/static/images/weather/dist/light-mode/default/svg/" + model.SymbolID + ".svg" }
						alt={ model.SymbolCode }
					/>
				</p>
			</div>
			<div class="col">
				<div class="row">
					<div class="col">
						<p class={ "temperature text-end" , shared.CSSColor(model.TemperatureColor) }>
							{ strconv.FormatFloat(model.Temperature, 'f', 0, 64) }°
						</p>
					</div>
				</div>
				<div class="row">
					<div class="col">
						<p class={ "precipitation text-end text-" + model.PrecipitationColor }>
							{ strconv.FormatFloat(model.Precipitation, 'f', 0, 64) } mm
						</p>
					</div>
				</div>
			</div>
		</div>
	</div>
}

templ YRForecastView(model YRForecastModel) {
	<table class="table" hx-get="/htmx/yrforecast" hx-trigger="every 15m" hx-swap="outerHTML">
		<thead>
			<tr>
				<th class="text-end" scope="col" colspan="4">Väderleksrapport</th>
			</tr>
		</thead>
		<tbody>
			if len(model.Items) > 0 {
				for _, item := range model.Items {
					<tr class="fs-5" style="height: 2em">
						<th scope="row">{ item.Time }</th>
						<td class={ shared.CSSColor(item.TemperatureColor) }>
							{ strconv.FormatFloat(item.Temperature, 'f', 0, 64) }°
						</td>
						<td>
							<img
								class="icon"
								src={ "/static/images/weather/dist/light-mode/default/svg/" + item.SymbolID + ".svg" }
								alt={ item.SymbolCode }
							/>
						</td>
						<td class={ "text-" + item.PrecipitationColor }>
							{ strconv.FormatFloat(item.Precipitation, 'f', 0, 64) } mm
						</td>
					</tr>
				}
			} else {
				<tr stype="height: 2em">
					<td colspan="4">No data</td>
				</tr>
			}
		</tbody>
	</table>
}
